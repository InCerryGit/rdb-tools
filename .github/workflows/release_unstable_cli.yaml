name: Release_CLI_Unstable

on:
    push:
      branches: [ dev, main, 'feat/**','*.*.*-beta*']
      tags:
        - "*.*.*-beta*"
        - "*.*.*-rc*"

jobs:
    publish_cli:
      name: Build and upload cli artifact
      runs-on: ubuntu-latest    
      strategy:
          matrix:
              targets:
                  [
                      "linux-arm",
                      "linux-arm64",
                      "osx-x64",
                      "win-x86",
                      "win-arm"
                  ]
      steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Set up .NET Core
          uses: actions/setup-dotnet@v1
          with:
              dotnet-version: "6.0.x"
        - name: Publish .NET app
          env:
              RID: ${{ matrix.targets }}
              VERSION: ${{ github.ref_name }}
          run: dotnet publish src/RDBCli/RDBCli.csproj -c Release -r $RID -p:PublishSingleFile=true -p:PublishTrimmed=true -p:DebugType=None -p:DebugSymbols=false -p:EnableCompressionInSingleFile=true --self-contained true --output /home/runner/work/clis/$RID

        - name: Package assets
          env:
              RID: ${{ matrix.targets }}
              VERSION: ${{ github.ref_name }}
          run: |
              mkdir /home/runner/work/release
              ls /home/runner/work/clis/
              zip -j /home/runner/work/release/rdb-cli.$VERSION.$RID.zip /home/runner/work/clis/$RID/*
        - name: Upload artifacts
          uses: actions/upload-artifact@v2
          with:
              name: rdb-cli
              path: /home/runner/work/release

    publish_osx_x64_cli:
      name: Build and upload cli artifact
      runs-on: osx-latest    
      strategy:
          matrix:
              targets:
                  [
                      "osx-x64"
                  ]
      steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Set up .NET Core
          uses: actions/setup-dotnet@v1
          with:
              dotnet-version: "6.0.x"
        - name: Publish .NET app
          env:
              RID: ${{ matrix.targets }}
              VERSION: ${{ github.ref_name }}
          run: dotnet publish src/RDBCli/RDBCli.csproj -c Release -r $RID -p:DebugType=None -p:DebugSymbols=false --self-contained true --output /home/runner/work/clis/$RID

        - name: Package assets
          env:
              RID: ${{ matrix.targets }}
              VERSION: ${{ github.ref_name }}
          run: |
              mkdir /home/runner/work/release
              ls /home/runner/work/clis/
              zip -j /home/runner/work/release/rdb-cli.$VERSION.$RID.zip /home/runner/work/clis/$RID/*
        - name: Upload artifacts
          uses: actions/upload-artifact@v2
          with:
              name: rdb-cli
              path: /home/runner/work/release

    publish_linux_x64_aot:
      name: Build and upload linux cli artifact
      runs-on: ubuntu-latest
      container:
        image: mcr.microsoft.com/dotnet/sdk:6.0-focal
        volumes:
          - /home/runner/work:/home/runner/work
      strategy:
          matrix:
              targets:
                  [
                    "linux-x64"
                  ]
      steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Add library
          run:  apt update && apt -y install cmake llvm clang build-essential python curl git lldb-6.0 liblldb-6.0-dev libunwind8 libunwind8-dev gettext libicu-dev liblttng-ust-dev libssl-dev libnuma-dev libkrb5-dev zlib1g-dev ninja-build zip
        - name: Publish .NET app
          env:
              RID: ${{ matrix.targets }}
              VERSION: ${{ github.ref_name }}
          run: dotnet publish src/RDBCli/RDBCli.csproj -c Release -r $RID -p:UseAot=true -p:DebugType=None -p:DebugSymbols=false --self-contained true --output /home/runner/work/clis/$RID

        - name: Package assets
          env:
              RID: ${{ matrix.targets }}
              VERSION: ${{ github.ref_name }}
          run: |
              mkdir /home/runner/work/release
              ls /home/runner/work/clis/
              zip -j /home/runner/work/release/rdb-cli.$VERSION.$RID.zip /home/runner/work/clis/$RID/* -x='/home/runner/work/clis/$RID/*.dbg'
        - name: Upload artifacts
          uses: actions/upload-artifact@v2
          with:
              name: rdb-cli
              path: /home/runner/work/release
    
    publish_linux_musl_x64_cli_aot:
      name: Build and upload linux musl x64 cli artifact
      runs-on: ubuntu-latest
      container:
        image: mcr.microsoft.com/dotnet/sdk:6.0-alpine
        volumes:
          - /home/runner/work:/home/runner/work
      strategy:
          matrix:
              targets:
                  [
                      "linux-musl-x64"
                  ]
      steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Add library
          run:  apk add clang libexecinfo binutils musl-dev build-base zlib-static krb5-dev zip llvm
        - name: Publish .NET app
          env:
              RID: ${{ matrix.targets }}
              VERSION: ${{ github.ref_name }}
          run: dotnet publish src/RDBCli/RDBCli.csproj -c Release -r $RID -p:UseAot=true -p:PublishTrimmed=true -p:DebugType=None -p:DebugSymbols=false --self-contained true --output /home/runner/work/clis/$RID

        - name: Package assets
          env:
              RID: ${{ matrix.targets }}
              VERSION: ${{ github.ref_name }}
          run: |
              mkdir /home/runner/work/release
              ls /home/runner/work/clis/
              zip -j /home/runner/work/release/rdb-cli.$VERSION.$RID.zip /home/runner/work/clis/$RID/* -x='/home/runner/work/clis/$RID/*.dbg'
        - name: Upload artifacts
          uses: actions/upload-artifact@v2
          with:
              name: rdb-cli
              path: /home/runner/work/release

    publish_windows_x64_aot:
      name: Build and upload windows cli artifact
      runs-on: windows-latest
      strategy:
          matrix:
              targets:
                  [
                    "win-x64",
                    "win-arm64"
                  ]
      steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Setup .NET Core SDK 6.x
          uses: actions/setup-dotnet@v2
          with:
            dotnet-version: 6.x
        - name: Publish .NET app
          env:
              RID: ${{ matrix.targets }}
              VERSION: ${{ github.ref_name }}
          run: dotnet publish src/RDBCli/RDBCli.csproj -c Release -r $($env:RID) -p:UseAot=true -p:DebugType=None -p:DebugSymbols=false --self-contained true --output ../publish/$($env:RID)

        - name: Package assets
          env:
              RID: ${{ matrix.targets }}
              VERSION: ${{ github.ref_name }}
          run: |
              mkdir ../release
              rm -fo ../publish/$($env:RID)/*.pdb
              ls ../publish/
              Compress-Archive -Path ../publish/$($env:RID)/* -DestinationPath ../release/rdb-cli.$($env:VERSION).$($env:RID).zip
        - name: Upload artifacts
          uses: actions/upload-artifact@v2
          with:
              name: rdb-cli
              path: D:/a/rdb-tools/release

    release_cli:
        name: Publish release
        needs: ['publish_linux_x64_aot','publish_linux_musl_x64_cli_aot','publish_windows_x64_aot']
        runs-on: ubuntu-latest
    
        steps:          
          - name: Download build artifacts
            uses: actions/download-artifact@v1
            with:
              name: rdb-cli
          - name: list rdb-cli
            run: ls rdb-cli    
          - name: Release
            uses: softprops/action-gh-release@v1
            if: startsWith(github.ref, 'refs/tags/')
            with:
                prerelease: true
                files: rdb-cli/**
                generate_release_notes: true